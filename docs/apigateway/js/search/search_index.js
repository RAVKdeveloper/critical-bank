var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.088,1,1.627]],["body/modules/AppModule.html",[0,1.673,1,2.992,2,1.252,3,1.43,4,1.912,5,1.912,6,1.43,7,2.575,8,1.912,9,2.271,10,2.271,11,2.504,12,0.051,13,2.192,14,2.575,15,1.912,16,1.912,17,0.643,18,0.554,19,0.554,20,0.324,21,2.817,22,2.575,23,1.185,24,1.252,25,4.289,26,3.793,27,2.271,28,2.817,29,2.271,30,2.271,31,3.793,32,2.817,33,3.793,34,3.793,35,1.252,36,3.793,37,3.793,38,2.817,39,3.059,40,1.912,41,1.252,42,2.817,43,2.817,44,2.817,45,4.289,46,4.289,47,0.643,48,0.079,49,0.035,50,0.035]],["title/controllers/AuthController.html",[51,1.627,52,1.627]],["body/controllers/AuthController.html",[12,0.051,17,0.403,18,0.347,19,0.347,20,0.484,23,1.097,24,0.784,35,0.784,41,1.203,47,0.403,48,0.05,49,0.025,50,0.025,51,1.58,52,1.58,53,1.424,54,1.424,55,0.347,56,2.183,57,4.062,58,4.062,59,2.183,60,2.707,61,2.183,62,2.656,63,1.765,64,4.725,65,1.554,66,1.765,67,1.365,68,1.765,69,3.212,70,2.704,71,1.046,72,2.022,73,1.707,74,3.212,75,3.212,76,1.765,77,2.707,78,1.765,79,1.765,80,1.765,81,1.875,82,4.062,83,3.693,84,1.765,85,3.641,86,1.424,87,1.875,88,2.707,89,1.765,90,1.765,91,1.875,92,1.765,93,1.765,94,1.765,95,2.707,96,1.765,97,2.656,98,1.765,99,1.765,100,0.896,101,1.765,102,1.765,103,2.707,104,3.293,105,2.707,106,3.983,107,1.424,108,1.765,109,1.199,110,1.463,111,1.424,112,1.424,113,1.424,114,1.424,115,1.424,116,1.424,117,1.374,118,1.765,119,1.765,120,1.765,121,1.765,122,1.765,123,0.784,124,1.765,125,2.022,126,2.325,127,3.212,128,1.765,129,1.77,130,3.983,131,1.765,132,2.707,133,1.838,134,1.765,135,1.765,136,1.765,137,1.765,138,1.765,139,1.765,140,1.765,141,1.765,142,1.765]],["title/modules/AuthModule.html",[0,1.088,11,1.415]],["body/modules/AuthModule.html",[0,1.586,2,1.129,3,1.29,4,1.725,5,1.725,6,1.29,7,2.759,8,1.725,11,2.539,12,0.052,13,2.125,14,2.4,15,1.725,16,1.725,17,0.58,18,0.499,19,0.499,20,0.292,22,2.4,23,1.174,24,1.129,39,2.85,40,1.725,41,1.129,47,0.58,48,0.071,49,0.032,50,0.032,52,2.372,53,2.85,70,2.4,110,2.125,111,2.049,129,1.129,143,2.049,144,2.54,145,2.049,146,2.54,147,3.534,148,1.725,149,3.278,150,2.049,151,2.54,152,2.54,153,3.534,154,2.54,155,2.049,156,3.534,157,3.534,158,3.278,159,1.129,160,0.991,161,2.54,162,1.29,163,2.54,164,2.54,165,2.049,166,2.54,167,2.54,168,2.54,169,2.54,170,1.725,171,2.54,172,2.54,173,2.54,174,0.991,175,2.54,176,2.54,177,2.54,178,2.54,179,2.54]],["title/injectables/AuthService.html",[110,1.239,180,1.627]],["body/injectables/AuthService.html",[12,0.051,17,0.357,18,0.308,19,0.308,20,0.514,23,1.063,24,0.696,35,0.696,41,0.696,47,0.357,48,0.044,49,0.023,50,0.023,55,0.308,56,1.989,57,4.147,58,4.147,59,1.989,61,1.989,62,1.989,67,1.487,69,3.226,70,2.716,71,1.051,72,2.031,73,0.962,74,3.376,75,2.792,81,1.758,82,3.376,85,3.498,86,1.989,87,1.758,91,1.758,97,3.226,109,1.063,110,1.096,112,1.263,113,1.263,114,1.263,115,1.263,116,1.263,125,1.912,127,3.226,129,1.674,133,2.072,148,1.063,158,1.263,159,0.696,160,0.611,165,1.263,170,1.675,180,1.44,181,1.566,182,1.263,183,3.052,184,4,185,4,186,1.566,187,1.566,188,3.462,189,1.566,190,1.566,191,1.566,192,2.466,193,2.466,194,3.684,195,1.566,196,4.186,197,1.566,198,1.566,199,2.466,200,1.566,201,1.566,202,2.466,203,1.566,204,3.462,205,1.263,206,2.466,207,3.052,208,1.566,209,2.466,210,1.566,211,1.675,212,1.566,213,2.466,214,1.566,215,1.263,216,1.566,217,1.566,218,1.566,219,0.611,220,1.566,221,1.566,222,1.566,223,1.566,224,1.566,225,1.566,226,1.566,227,3.462,228,1.566,229,1.566,230,1.566,231,1.566,232,3.052,233,1.566,234,1.566,235,3.052,236,2.072,237,3.052,238,0.914,239,1.566,240,1.566,241,1.566,242,1.566,243,1.566,244,1.263,245,1.566,246,1.566,247,1.566,248,1.566,249,1.566,250,1.566,251,1.566]],["title/classes/ConfigModel.html",[48,0.078,162,1.415]],["body/classes/ConfigModel.html",[12,0.051,17,0.402,18,0.346,19,0.346,20,0.596,23,0.958,35,0.783,40,1.196,47,0.402,48,0.092,49,0.025,50,0.025,55,0.346,65,2.009,67,1.765,71,1.352,72,1.373,162,1.373,174,2.094,219,1.055,252,0.688,253,1.421,254,3.29,255,3.29,256,3.29,257,0.927,258,3.29,259,3.29,260,3.29,261,3.29,262,3.29,263,3.29,264,3.29,265,3.29,266,3.29,267,3.29,268,3.29,269,3.29,270,3.29,271,3.29,272,3.29,273,3.29,274,3.29,275,3.29,276,2.371,277,1.762,278,1.762,279,1.762,280,1.762,281,2.634,282,2.704,283,1.762,284,1.762,285,1.762,286,1.762,287,1.762,288,1.762,289,1.762,290,1.762,291,2.704,292,1.762,293,1.762,294,1.762,295,1.762,296,1.762,297,1.762,298,1.762,299,1.762,300,1.762,301,1.762,302,1.762,303,1.762,304,1.762,305,1.762,306,1.762,307,1.029,308,2.704,309,0.895,310,2.323,311,1.836,312,2.704,313,0.688,314,2.704,315,2.704,316,2.704,317,1.762]],["title/modules/ConfigModule.html",[0,1.088,13,1.239]],["body/modules/ConfigModule.html",[0,1.799,2,1.699,12,0.05,13,2.2,17,0.873,18,0.752,19,0.752,20,0.44,22,2.596,23,1.13,24,1.699,47,0.873,48,0.107,49,0.042,50,0.042,150,3.084,162,1.941,318,3.824,319,3.824,320,3.824,321,3.824]],["title/classes/GetMeDto.html",[48,0.078,322,1.627]],["body/classes/GetMeDto.html",[12,0.05,17,0.412,18,0.355,19,0.355,20,0.571,23,0.853,35,0.803,47,0.763,48,0.105,49,0.025,50,0.025,55,0.355,65,1.913,67,1.68,71,1.34,73,1.459,117,0.918,123,2.438,125,0.918,126,1.609,129,0.803,159,0.803,160,0.705,174,1.974,219,1.076,238,1.951,252,0.705,257,0.945,276,1.789,281,1.951,307,1.055,309,1.4,310,1.609,313,0.705,322,2.182,323,2.519,324,0.918,325,2.695,326,2.695,327,1.951,328,2.695,329,2.695,330,2.695,331,1.951,332,2.269,333,2.695,334,2.269,335,2.269,336,3.421,337,3.738,338,1.807,339,3.738,340,1.807,341,1.807,342,1.807,343,1.807,344,1.807,345,1.807,346,1.807,347,3.015,348,2.757,349,1.807,350,1.807,351,1.807,352,1.807,353,1.807,354,1.807,355,1.807,356,1.807,357,4.08,358,1.458,359,2.695,360,2.223,361,2.223,362,3.246,363,1.458,364,1.055,365,1.055,366,1.458,367,1.227,368,1.227]],["title/classes/LoginUserDto.html",[48,0.078,81,1.415]],["body/classes/LoginUserDto.html",[12,0.05,17,0.652,18,0.562,19,0.562,20,0.531,23,0.986,47,0.652,48,0.108,49,0.035,50,0.035,55,0.562,65,1.685,67,1.481,71,1.135,72,2.343,81,1.944,100,1.451,123,2.315,159,1.27,160,1.115,174,1.933,219,1.494,252,1.115,257,1.313,276,1.702,309,1.944,311,2.6,313,1.115,327,2.522,331,2.522,369,3.722,370,2.304,371,4.32,372,3.484,373,2.933,374,2.304,375,2.858,376,2.304,377,2.858,378,2.858,379,2.858,380,3.089,381,2.304,382,2.304,383,3.134,384,2.522,385,2.304,386,2.304,387,2.304,388,2.304,389,2.304]],["title/classes/ResponseMeDto.html",[48,0.078,365,1.627]],["body/classes/ResponseMeDto.html",[12,0.05,17,0.561,18,0.483,19,0.483,20,0.459,23,0.988,35,1.092,47,0.911,48,0.122,49,0.032,50,0.032,55,0.483,65,1.347,67,1.184,71,1.198,73,1.78,117,1.248,123,2.398,125,1.248,126,2.016,129,1.092,159,1.092,160,0.959,174,1.994,219,0.959,238,1.435,252,0.959,257,1.184,276,2.028,281,2.331,307,1.435,309,1.753,310,2.016,313,0.959,322,2.528,323,2.027,324,1.248,325,1.982,326,1.982,327,1.435,328,1.982,329,1.982,330,1.982,331,1.435,332,1.669,333,1.982,334,1.669,335,1.669,336,3.22,347,2.785,357,4.292,358,1.982,359,3.22,360,2.785,361,2.785,362,3.68,363,1.982,364,1.435,365,2.016,366,3.22,367,1.669,368,1.669,390,2.458,391,2.458,392,2.458,393,2.458]],["title/classes/UserRegistrationDto.html",[48,0.078,87,1.415]],["body/classes/UserRegistrationDto.html",[12,0.05,17,0.485,18,0.417,19,0.417,20,0.549,23,0.84,47,0.485,48,0.087,49,0.028,50,0.028,55,0.417,65,1.815,67,1.595,71,1.222,72,2.287,73,1.213,87,1.579,100,1.078,123,2.383,160,0.828,174,1.979,219,1.213,238,2.148,252,0.828,257,1.066,276,1.916,281,1.815,309,1.579,310,1.815,311,2.75,313,0.828,327,2.148,331,2.148,332,2.498,334,2.498,335,2.498,372,2.967,373,3.058,374,1.712,376,1.712,380,2.508,381,1.712,382,1.712,383,3.24,384,2.785,385,1.712,386,2.508,387,1.712,388,1.712,389,1.712,394,1.712,395,3.679,396,2.124,397,2.124,398,4.504,399,2.124,400,2.124,401,2.124,402,3.11,403,3.11,404,3.11,405,2.111,406,3.11,407,2.124,408,2.124,409,3.11,410,2.124,411,2.124,412,2.124,413,2.124,414,2.124,415,2.124,416,2.124,417,3.679,418,1.442,419,2.124,420,3.679,421,3.679,422,2.124]],["title/classes/VerifyAuthCodeDto.html",[48,0.078,91,1.415]],["body/classes/VerifyAuthCodeDto.html",[12,0.05,17,0.773,18,0.666,19,0.666,20,0.492,23,1.07,41,1.902,47,0.773,48,0.12,49,0.039,50,0.039,55,0.666,65,1.322,67,1.162,71,0.89,91,2.173,100,1.721,123,2.084,159,1.506,160,1.322,174,1.67,215,2.733,219,1.67,244,3.783,252,1.322,257,1.467,276,1.902,313,1.322,364,2.498,373,2.301,383,2.906,384,1.978,423,3.451,424,2.733,425,3.389,426,3.389,427,3.389,428,3.389,429,3.389]],["title/coverage.html",[430,2.557]],["body/coverage.html",[6,1.459,12,0.05,19,0.565,20,0.623,41,1.277,48,0.139,49,0.035,50,0.035,51,1.678,52,1.678,54,2.318,71,1.01,73,1.121,81,1.459,87,1.459,91,1.459,110,1.277,117,1.459,162,1.459,180,1.678,182,2.318,211,1.951,236,1.951,253,2.318,322,1.678,323,2.349,324,2.349,365,1.678,369,2.318,370,2.318,394,2.318,423,2.318,424,2.318,430,1.951,431,2.874,432,2.874,433,2.874,434,5.412,435,2.874,436,2.942,437,2.874,438,4.962,439,4.626,440,2.318,441,2.318,442,2.874,443,2.874,444,2.318,445,2.318,446,2.874,447,2.874,448,2.874,449,2.874,450,2.874,451,2.874,452,2.874,453,2.874]],["title/dependencies.html",[3,1.697,454,1.893]],["body/dependencies.html",[3,1.099,12,0.052,24,0.962,27,1.746,29,1.746,30,1.746,48,0.089,49,0.029,50,0.029,100,1.099,107,1.746,109,2.526,148,1.47,155,1.746,170,1.47,194,1.746,205,1.746,307,1.264,313,0.845,455,2.166,456,2.166,457,2.166,458,2.166,459,2.166,460,2.166,461,2.166,462,2.166,463,4.345,464,3.155,465,2.166,466,2.166,467,3.155,468,2.166,469,2.166,470,2.166,471,2.166,472,2.166,473,2.166,474,3.721,475,2.166,476,4.088,477,2.166,478,2.166,479,2.166,480,2.166,481,2.166,482,2.166,483,2.166,484,2.166,485,2.166,486,2.166,487,2.166,488,2.166,489,2.166,490,2.166,491,2.166,492,2.166,493,2.166,494,2.166,495,2.166,496,2.166,497,2.166,498,2.166,499,2.166,500,2.166,501,2.166,502,2.166,503,2.166,504,2.166,505,2.166,506,2.166,507,2.166,508,2.166,509,2.166,510,2.166,511,2.166,512,3.155,513,2.166,514,2.166,515,2.166,516,2.166,517,2.166,518,2.166,519,3.155,520,3.155,521,2.166,522,2.166,523,2.166,524,2.166,525,2.166,526,2.166,527,2.166,528,2.166,529,2.166,530,2.166,531,2.166,532,2.166,533,2.166,534,2.166,535,2.166,536,2.166,537,2.166,538,2.166,539,2.166,540,2.166,541,2.166,542,2.166,543,2.166,544,2.166,545,2.166,546,2.166,547,2.166,548,2.166,549,2.166,550,2.166,551,2.166,552,2.166,553,2.166,554,2.166,555,3.155,556,2.166,557,2.166,558,2.166,559,2.166,560,2.166,561,2.166,562,2.166,563,2.166,564,2.166,565,2.166,566,2.166,567,2.166,568,2.166,569,2.166,570,2.166,571,2.166,572,2.166,573,2.166,574,3.155,575,2.166,576,2.166,577,2.166,578,3.155,579,2.166,580,2.166,581,2.166]],["title/miscellaneous/functions.html",[582,1.043,583,2.696]],["body/miscellaneous/functions.html",[6,2.61,12,0.044,20,0.481,49,0.044,50,0.044,55,0.822,436,2.839,582,1.858,583,3.372,584,3.372]],["title/index.html",[55,0.461,585,2.347,586,2.347]],["body/index.html",[12,0.05,18,0.602,49,0.037,50,0.037,384,2.61,405,2.079,418,2.079,430,2.079,587,3.062,588,3.062,589,4.01,590,3.062,591,3.062,592,3.062,593,3.062,594,3.062,595,3.062,596,4.471,597,3.062,598,3.062,599,3.062,600,3.062,601,5.147,602,3.062,603,2.469,604,5.052,605,3.062,606,3.062,607,4.01,608,3.062,609,3.062,610,3.062,611,3.062,612,4.01,613,4.01,614,3.062,615,3.062,616,3.062,617,4.01,618,4.01,619,3.062,620,3.062,621,3.062,622,3.062,623,3.062,624,2.469,625,3.062,626,3.062,627,3.062,628,3.062,629,3.062,630,3.062,631,3.062,632,3.062,633,3.062,634,3.062,635,2.469,636,3.062,637,3.062,638,3.062,639,3.062,640,3.062,641,3.062,642,2.469]],["title/modules.html",[2,1.674]],["body/modules.html",[1,2.38,2,1.812,11,2.07,12,0.044,13,1.812,49,0.044,50,0.044,624,3.863,643,4.79,644,4.79,645,5.087,646,4.077,647,4.077]],["title/overview.html",[648,3.038]],["body/overview.html",[0,1.399,1,3.072,2,1.594,3,1.821,4,2.435,5,2.435,6,1.821,7,2.435,8,2.435,9,2.893,10,2.893,11,2.708,12,0.048,13,2.234,14,3.011,15,2.435,16,2.435,49,0.04,50,0.04,51,2.094,110,2.139,143,2.893,145,2.893,180,2.094,252,1.399,648,2.893,649,3.587,650,4.434,651,3.587]],["title/properties.html",[257,1.146,454,1.893]],["body/properties.html",[12,0.05,49,0.044,50,0.044,257,1.421,418,2.815,635,3.344,642,3.344,652,4.146,653,4.146,654,4.146]],["title/miscellaneous/typealiases.html",[582,1.043,655,3.343]],["body/miscellaneous/typealiases.html",[12,0.044,20,0.475,49,0.044,50,0.044,55,0.812,71,1.084,73,1.883,323,2.096,324,2.45,364,2.41,582,1.835,656,4.129,657,3.33]],["title/miscellaneous/variables.html",[582,1.043,658,2.696]],["body/miscellaneous/variables.html",[12,0.051,20,0.507,49,0.036,50,0.036,55,0.584,117,1.995,125,1.995,126,2.294,129,1.32,133,2.668,149,2.395,211,2.668,236,2.016,323,1.508,324,1.995,367,2.016,368,2.016,405,2.99,436,2.016,440,3.169,441,3.169,444,2.395,445,3.169,582,1.32,584,3.169,603,2.395,657,2.395,658,2.395,659,2.97,660,4.687,661,4.687,662,2.97,663,3.929,664,4.404,665,2.97,666,3.929,667,3.929,668,3.929,669,3.929,670,3.929,671,2.97,672,2.97,673,2.97,674,3.929,675,2.97,676,2.97,677,2.97,678,2.97,679,2.97,680,2.97,681,3.929,682,2.97,683,2.97]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConfigModel.html":{},"modules/ConfigModule.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":434,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":653,"title":{},"body":{"properties.html":{}}}],["0.1.8",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["0.30.1",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["0.7.13",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":650,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["1.0.15",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["1.11.3",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["1.2.4",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["1.7.7",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["1.95.5",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["10.3.0",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["10.4.3",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["10.4.4",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["11.3.0",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["12345lw2324",{"_index":387,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/UserRegistrationDto.html":{}}}],["12345lw2324'})@isstring()@minlength(10)@maxlength(120",{"_index":376,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/UserRegistrationDto.html":{}}}],["15.1.0",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["15.1.3",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["16.4.5",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["2.2.4",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":649,"title":{},"body":{"overview.html":{}}}],["3.1.0",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["3.17.0",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["4.15.0",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["4.21.1",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["4.3.2",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["5.1.5",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":651,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["6.1.3",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["6.9.15",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["7.4.2",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["7432435565",{"_index":406,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["79323454550",{"_index":386,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/UserRegistrationDto.html":{}}}],["79323454550'})@isoptional()@isphonenumber",{"_index":378,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["8.13.0",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["8.8.1",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["access_cookie_token_life",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_expiration_time",{"_index":258,"title":{},"body":{"classes/ConfigModel.html":{}}}],["access_secret_key",{"_index":259,"title":{},"body":{"classes/ConfigModel.html":{}}}],["access_token_encrypt_key",{"_index":260,"title":{},"body":{"classes/ConfigModel.html":{}}}],["adapter",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["addcookieauth('access_token_auth",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alias",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":656,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":625,"title":{},"body":{"index.html":{}}}],["api",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":383,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{}}}],["apiproperty({description",{"_index":401,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["apiproperty({example",{"_index":373,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{}}}],["apitags",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('auth",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":405,"title":{},"body":{"classes/UserRegistrationDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.enablecors",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_interceptor",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["applications",{"_index":595,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/.../broker",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../get",{"_index":657,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":584,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConfigModel.html":{},"modules/ConfigModule.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["appuser",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{}}}],["arraytransformer",{"_index":304,"title":{},"body":{"classes/ConfigModel.html":{}}}],["async",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["auth",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/VerifyAuthCodeDto.html":{},"coverage.html":{}}}],["auth.controller",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.envs.model",{"_index":301,"title":{},"body":{"classes/ConfigModel.html":{}}}],["auth.service",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/core/model/core",{"_index":300,"title":{},"body":{"classes/ConfigModel.html":{}}}],["auth_client_id",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth_consumer",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth_redis_host",{"_index":261,"title":{},"body":{"classes/ConfigModel.html":{}}}],["auth_redis_port",{"_index":262,"title":{},"body":{"classes/ConfigModel.html":{}}}],["auth_service_name",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["authcode",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"classes/VerifyAuthCodeDto.html":{}}}],["authcontroller",{"_index":52,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":11,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authmsgpattern",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["authmsgpattern.user_verify_auth_code",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["author",{"_index":635,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":110,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authservicemsgbrokersubsarr",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":647,"title":{},"body":{"modules.html":{}}}],["await",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["axios",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["backers",{"_index":626,"title":{},"body":{"index.html":{}}}],["bank",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["bip32",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["bip39",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["bitcoinjs",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["body",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":347,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["broker",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["brokers",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{}}}],["browse",{"_index":645,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":643,"title":{},"body":{"modules.html":{}}}],["bs58",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":590,"title":{},"body":{"index.html":{}}}],["cache",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["cachedatabasemodule",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":48,"title":{"classes/ConfigModel.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConfigModel.html":{},"modules/ConfigModule.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":252,"title":{},"body":{"classes/ConfigModel.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{},"overview.html":{}}}],["clickhouse/client",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["client",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["client_url",{"_index":263,"title":{},"body":{"classes/ConfigModel.html":{}}}],["clientid",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["clientkafka",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["clients",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["cls",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["cls/transactional",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["code.dto",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["code.dto.ts",{"_index":424,"title":{},"body":{"classes/VerifyAuthCodeDto.html":{},"coverage.html":{}}}],["code.dto.ts:9",{"_index":426,"title":{},"body":{"classes/VerifyAuthCodeDto.html":{}}}],["colors",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["commonauth",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["config",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.env.client_url",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.model",{"_index":320,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config/config.model",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{}}}],["config/config.module",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodel",{"_index":162,"title":{"classes/ConfigModel.html":{}},"body":{"modules/AuthModule.html":{},"classes/ConfigModel.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["configmodule",{"_index":13,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configmodulelib",{"_index":319,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configmodulelib.register(configmodel",{"_index":321,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configservice",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(@inject(auth_service_name",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(client",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["consumer",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller",{"_index":51,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":53,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["cookie",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["cookieauthkeys",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["coreauthenvsmodel",{"_index":255,"title":{},"body":{"classes/ConfigModel.html":{}}}],["coreauthmodule",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["coverage",{"_index":430,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createdat",{"_index":325,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{}}}],["createpartitioner",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["credentials",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["critical@gmail.com",{"_index":385,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/UserRegistrationDto.html":{}}}],["critical@gmail.com'})@isemail",{"_index":374,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/UserRegistrationDto.html":{}}}],["customvalidationpipe",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["data",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":336,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{}}}],["date(date.now",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["decimal.js",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["decorators",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"classes/ConfigModel.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{}}}],["default",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigModel.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{}}}],["deletedat",{"_index":326,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":418,"title":{},"body":{"classes/UserRegistrationDto.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":603,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["document",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dotenv",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto.authcode",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/get",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/login",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/registration.dto",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/verify",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["e2e",{"_index":614,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":591,"title":{},"body":{"index.html":{}}}],["email",{"_index":327,"title":{},"body":{"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{}}}],["enablecorsbyenv",{"_index":440,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["env",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["env.kafka_brokers_array",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{}}}],["example",{"_index":384,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{},"index.html":{}}}],["exceptions",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["expires",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConfigModel.html":{},"modules/ConfigModule.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["expose",{"_index":357,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{}}}],["expose()@isboolean",{"_index":348,"title":{},"body":{"classes/GetMeDto.html":{}}}],["expose()@isemail",{"_index":341,"title":{},"body":{"classes/GetMeDto.html":{}}}],["expose()@isnullable",{"_index":339,"title":{},"body":{"classes/GetMeDto.html":{}}}],["expose()@isnumber",{"_index":390,"title":{},"body":{"classes/ResponseMeDto.html":{}}}],["expose()@isstring",{"_index":337,"title":{},"body":{"classes/GetMeDto.html":{}}}],["expose()@isuuid",{"_index":345,"title":{},"body":{"classes/GetMeDto.html":{}}}],["expose()@type(undefined)@validatenested",{"_index":392,"title":{},"body":{"classes/ResponseMeDto.html":{}}}],["express",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["f85b5fbb5d",{"_index":428,"title":{},"body":{"classes/VerifyAuthCodeDto.html":{}}}],["f85b5fbb5d'})@isstring()@length(10",{"_index":425,"title":{},"body":{"classes/VerifyAuthCodeDto.html":{}}}],["false",{"_index":417,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["false})@isoptional()@isnumber",{"_index":407,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["false})@isoptional()@isphonenumber",{"_index":399,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["false})@isoptional()@isstring()@minlength(2)@maxlength(30",{"_index":410,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConfigModel.html":{},"modules/ConfigModule.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{},"coverage.html":{}}}],["framework",{"_index":589,"title":{},"body":{"index.html":{}}}],["function",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":583,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway/src/app.module.ts",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["gateway/src/config/config.model.ts",{"_index":253,"title":{},"body":{"classes/ConfigModel.html":{},"coverage.html":{}}}],["gateway/src/config/config.model.ts:10",{"_index":290,"title":{},"body":{"classes/ConfigModel.html":{}}}],["gateway/src/config/config.model.ts:13",{"_index":289,"title":{},"body":{"classes/ConfigModel.html":{}}}],["gateway/src/config/config.model.ts:16",{"_index":280,"title":{},"body":{"classes/ConfigModel.html":{}}}],["gateway/src/config/config.model.ts:20",{"_index":283,"title":{},"body":{"classes/ConfigModel.html":{}}}],["gateway/src/config/config.model.ts:24",{"_index":299,"title":{},"body":{"classes/ConfigModel.html":{}}}],["gateway/src/config/config.model.ts:27",{"_index":278,"title":{},"body":{"classes/ConfigModel.html":{}}}],["gateway/src/config/config.model.ts:30",{"_index":277,"title":{},"body":{"classes/ConfigModel.html":{}}}],["gateway/src/config/config.model.ts:33",{"_index":297,"title":{},"body":{"classes/ConfigModel.html":{}}}],["gateway/src/config/config.model.ts:36",{"_index":296,"title":{},"body":{"classes/ConfigModel.html":{}}}],["gateway/src/config/config.model.ts:39",{"_index":298,"title":{},"body":{"classes/ConfigModel.html":{}}}],["gateway/src/config/config.model.ts:42",{"_index":279,"title":{},"body":{"classes/ConfigModel.html":{}}}],["gateway/src/config/config.model.ts:45",{"_index":288,"title":{},"body":{"classes/ConfigModel.html":{}}}],["gateway/src/config/config.model.ts:49",{"_index":292,"title":{},"body":{"classes/ConfigModel.html":{}}}],["gateway/src/config/config.model.ts:53",{"_index":295,"title":{},"body":{"classes/ConfigModel.html":{}}}],["gateway/src/config/config.model.ts:56",{"_index":293,"title":{},"body":{"classes/ConfigModel.html":{}}}],["gateway/src/config/config.model.ts:59",{"_index":294,"title":{},"body":{"classes/ConfigModel.html":{}}}],["gateway/src/config/config.model.ts:64",{"_index":285,"title":{},"body":{"classes/ConfigModel.html":{}}}],["gateway/src/config/config.model.ts:68",{"_index":287,"title":{},"body":{"classes/ConfigModel.html":{}}}],["gateway/src/config/config.module.ts",{"_index":318,"title":{},"body":{"modules/ConfigModule.html":{}}}],["gateway/src/main.ts",{"_index":436,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gateway/src/modules/auth/auth.controller.ts",{"_index":54,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["gateway/src/modules/auth/auth.controller.ts:21",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["gateway/src/modules/auth/auth.controller.ts:27",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["gateway/src/modules/auth/auth.controller.ts:34",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{}}}],["gateway/src/modules/auth/auth.controller.ts:41",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["gateway/src/modules/auth/auth.controller.ts:52",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["gateway/src/modules/auth/auth.module.ts",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{}}}],["gateway/src/modules/auth/auth.service.ts",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["gateway/src/modules/auth/auth.service.ts:27",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["gateway/src/modules/auth/auth.service.ts:30",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["gateway/src/modules/auth/auth.service.ts:38",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["gateway/src/modules/auth/auth.service.ts:42",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["gateway/src/modules/auth/auth.service.ts:48",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["gateway/src/modules/auth/auth.service.ts:65",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["gateway/src/modules/auth/auth.service.ts:73",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["gateway/src/modules/auth/auth.service.ts:94",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["gateway/src/modules/auth/broker",{"_index":444,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gateway/src/modules/auth/dto/get",{"_index":323,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["gateway/src/modules/auth/dto/login",{"_index":369,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["gateway/src/modules/auth/dto/registration.dto.ts",{"_index":394,"title":{},"body":{"classes/UserRegistrationDto.html":{},"coverage.html":{}}}],["gateway/src/modules/auth/dto/registration.dto.ts:16",{"_index":396,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["gateway/src/modules/auth/dto/registration.dto.ts:21",{"_index":400,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["gateway/src/modules/auth/dto/registration.dto.ts:30",{"_index":408,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["gateway/src/modules/auth/dto/registration.dto.ts:36",{"_index":413,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["gateway/src/modules/auth/dto/registration.dto.ts:42",{"_index":415,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["gateway/src/modules/auth/dto/registration.dto.ts:49",{"_index":411,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["gateway/src/modules/auth/dto/registration.dto.ts:55",{"_index":397,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["gateway/src/modules/auth/dto/verify",{"_index":423,"title":{},"body":{"classes/VerifyAuthCodeDto.html":{},"coverage.html":{}}}],["get('/me",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/me')@commonauth",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{}}}],["getmedto",{"_index":322,"title":{"classes/GetMeDto.html":{}},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"coverage.html":{}}}],["getmemsg",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["getting",{"_index":585,"title":{"index.html":{}},"body":{}}],["getuserme",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":646,"title":{},"body":{"modules.html":{}}}],["groupid",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{}}}],["grow",{"_index":621,"title":{},"body":{"index.html":{}}}],["grpc",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["grpc/grpc",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["grpc/proto",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":632,"title":{},"body":{"index.html":{}}}],["http",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["httpinterceptor",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["httponly",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":639,"title":{},"body":{"index.html":{}}}],["id",{"_index":328,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{}}}],["id(from",{"_index":403,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["identifier",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["implements",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigModel.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{}}}],["import",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConfigModel.html":{},"modules/ConfigModule.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{}}}],["imports",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{}}}],["index",{"_index":55,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigModel.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConfigModel.html":{},"modules/ConfigModule.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{}}}],["inject",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["injectable",{"_index":180,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["installation",{"_index":600,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":602,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":308,"title":{},"body":{"classes/ConfigModel.html":{}}}],["isblocked",{"_index":329,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{}}}],["isboolean",{"_index":359,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{}}}],["isemail",{"_index":309,"title":{},"body":{"classes/ConfigModel.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{}}}],["isnullable",{"_index":362,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{}}}],["isnumber",{"_index":310,"title":{},"body":{"classes/ConfigModel.html":{},"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{}}}],["isnumber()@transform(p",{"_index":291,"title":{},"body":{"classes/ConfigModel.html":{}}}],["isoptional",{"_index":311,"title":{},"body":{"classes/ConfigModel.html":{},"classes/LoginUserDto.html":{},"classes/UserRegistrationDto.html":{}}}],["isoptional()@isstring()@isurl",{"_index":284,"title":{},"body":{"classes/ConfigModel.html":{}}}],["isphonenumber",{"_index":380,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/UserRegistrationDto.html":{}}}],["isstring",{"_index":276,"title":{},"body":{"classes/ConfigModel.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{}}}],["isurl",{"_index":312,"title":{},"body":{"classes/ConfigModel.html":{}}}],["isuuid",{"_index":360,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{}}}],["isverify",{"_index":330,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{}}}],["ivan",{"_index":419,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["ivan'})@isstring()@minlength(2)@maxlength(30",{"_index":412,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["ivanov",{"_index":422,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["ivanov'})@isstring()@minlength(2)@maxlength(30",{"_index":414,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["ivanovich",{"_index":409,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["join",{"_index":628,"title":{},"body":{"index.html":{}}}],["js",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["kafka_brokers_array",{"_index":264,"title":{},"body":{"classes/ConfigModel.html":{}}}],["kafkaclientmodule",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["kafkaclientmodule.registerasync",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["kafkajs",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["kamil",{"_index":636,"title":{},"body":{"index.html":{}}}],["lastvaluefrom",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["lastvaluefrom(this.client.send(authmsgpattern.user_registration",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["length",{"_index":427,"title":{},"body":{"classes/VerifyAuthCodeDto.html":{}}}],["length(10",{"_index":429,"title":{},"body":{"classes/VerifyAuthCodeDto.html":{}}}],["lib",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["lib/core",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/ConfigModel.html":{}}}],["lib/kafka",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/VerifyAuthCodeDto.html":{}}}],["lib/loki",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["lib/loki/types/env.model",{"_index":302,"title":{},"body":{"classes/ConfigModel.html":{}}}],["lib/micro",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["lib/tokens/model/jwt.envs.model",{"_index":303,"title":{},"body":{"classes/ConfigModel.html":{}}}],["libs/cache",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["libs/config",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"modules/ConfigModule.html":{}}}],["libs/constants",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["libs/core",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigModel.html":{},"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{}}}],["libs/core/types/user",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["libs/grpc",{"_index":416,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["license",{"_index":642,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":618,"title":{},"body":{"index.html":{}}}],["literal",{"_index":344,"title":{},"body":{"classes/GetMeDto.html":{}}}],["loader",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["logginginterceptor",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(dto",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginmsg",{"_index":371,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["loginuserdto",{"_index":81,"title":{"classes/LoginUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginUserDto.html":{},"coverage.html":{}}}],["loki",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["loki_endpoint",{"_index":265,"title":{},"body":{"classes/ConfigModel.html":{}}}],["loki_job_name",{"_index":266,"title":{},"body":{"classes/ConfigModel.html":{}}}],["loki_url",{"_index":267,"title":{},"body":{"classes/ConfigModel.html":{}}}],["lokienvsmodel",{"_index":256,"title":{},"body":{"classes/ConfigModel.html":{}}}],["lokilogger",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["makeresponse",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["makeresponse(data",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["manager",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConfigModel.html":{},"modules/ConfigModule.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":381,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/UserRegistrationDto.html":{}}}],["maxlength(120",{"_index":389,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/UserRegistrationDto.html":{}}}],["maxlength(30",{"_index":421,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["me(@user",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["me(user",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{}}}],["me(userid",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["me.dto",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["me.dto.ts",{"_index":324,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["me.dto.ts:11",{"_index":352,"title":{},"body":{"classes/GetMeDto.html":{}}}],["me.dto.ts:15",{"_index":355,"title":{},"body":{"classes/GetMeDto.html":{}}}],["me.dto.ts:19",{"_index":356,"title":{},"body":{"classes/GetMeDto.html":{}}}],["me.dto.ts:23",{"_index":354,"title":{},"body":{"classes/GetMeDto.html":{}}}],["me.dto.ts:27",{"_index":342,"title":{},"body":{"classes/GetMeDto.html":{}}}],["me.dto.ts:31",{"_index":351,"title":{},"body":{"classes/GetMeDto.html":{}}}],["me.dto.ts:35",{"_index":349,"title":{},"body":{"classes/GetMeDto.html":{}}}],["me.dto.ts:39",{"_index":350,"title":{},"body":{"classes/GetMeDto.html":{}}}],["me.dto.ts:43",{"_index":346,"title":{},"body":{"classes/GetMeDto.html":{}}}],["me.dto.ts:47",{"_index":338,"title":{},"body":{"classes/GetMeDto.html":{}}}],["me.dto.ts:51",{"_index":353,"title":{},"body":{"classes/GetMeDto.html":{}}}],["me.dto.ts:55",{"_index":340,"title":{},"body":{"classes/GetMeDto.html":{}}}],["me.dto.ts:61",{"_index":391,"title":{},"body":{"classes/ResponseMeDto.html":{}}}],["me.dto.ts:66",{"_index":393,"title":{},"body":{"classes/ResponseMeDto.html":{}}}],["metadata",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["migrate",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["mini",{"_index":404,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["minlength",{"_index":382,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/UserRegistrationDto.html":{}}}],["minlength(10",{"_index":388,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/UserRegistrationDto.html":{}}}],["minlength(2",{"_index":420,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["miscellaneous",{"_index":582,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":617,"title":{},"body":{"index.html":{}}}],["mode",{"_index":607,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.module",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["mongoose",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":631,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":637,"title":{},"body":{"index.html":{}}}],["name",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["nest",{"_index":596,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":641,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["nestjs/axios",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["nestjs/cache",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginUserDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["noble/ciphers",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["noble/hashes",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":588,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["nottg",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["number",{"_index":281,"title":{},"body":{"classes/ConfigModel.html":{},"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{}}}],["number(p.value",{"_index":316,"title":{},"body":{"classes/ConfigModel.html":{}}}],["numtransformer",{"_index":305,"title":{},"body":{"classes/ConfigModel.html":{}}}],["object.values(authmsgpattern",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["omit",{"_index":364,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"classes/VerifyAuthCodeDto.html":{},"miscellaneous/typealiases.html":{}}}],["onapplicationshutdown",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["onmoduleinit",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["open",{"_index":619,"title":{},"body":{"index.html":{}}}],["optional",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigModel.html":{},"classes/LoginUserDto.html":{},"classes/UserRegistrationDto.html":{}}}],["options",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["optionssuccessstatus",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["origin",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["overview",{"_index":648,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":454,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["parser",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["partitioners",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{}}}],["partitioners.legacypartitioner",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["passthrough",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":372,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/UserRegistrationDto.html":{}}}],["patch",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('/verify/auth/code",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["path",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["pg",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["phonenumber",{"_index":331,"title":{},"body":{"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{}}}],["pino",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":629,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":601,"title":{},"body":{"index.html":{}}}],["port",{"_index":268,"title":{},"body":{"classes/ConfigModel.html":{}}}],["post",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/sign",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/verify/auth/code",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/verify/auth/code')@preauth",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["preauth",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["preauthuser",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["pretty",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env['node_env",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["producer",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["production",{"_index":609,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":587,"title":{},"body":{"index.html":{}}}],["project",{"_index":620,"title":{},"body":{"index.html":{}}}],["prom",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["prometheusmodule",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["prometheusmodule.register",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["promise",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["properties",{"_index":257,"title":{"properties.html":{}},"body":{"classes/ConfigModel.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{},"properties.html":{}}}],["proto",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["provide",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["public",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["ramda",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["rc.0",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":630,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{}}}],["redis",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["redis_host",{"_index":269,"title":{},"body":{"classes/ConfigModel.html":{}}}],["redis_password",{"_index":270,"title":{},"body":{"classes/ConfigModel.html":{}}}],["redis_port",{"_index":271,"title":{},"body":{"classes/ConfigModel.html":{}}}],["reflect",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["refresh_cookie_token_life",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_expiration_time",{"_index":272,"title":{},"body":{"classes/ConfigModel.html":{}}}],["refresh_secret_key",{"_index":273,"title":{},"body":{"classes/ConfigModel.html":{}}}],["refresh_token_encrypt_key",{"_index":274,"title":{},"body":{"classes/ConfigModel.html":{}}}],["refresh_tokens_cache_ttl",{"_index":275,"title":{},"body":{"classes/ConfigModel.html":{}}}],["registrationmsg",{"_index":395,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["repeat",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["repeat')@preauth",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["repeatauthcode",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["repeatauthcode(@preauthuser",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["repeatauthcode(user",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["repeatauthcode(userid",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["repeatverifycodemsg",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["repository",{"_index":599,"title":{},"body":{"index.html":{}}}],["requestpatterns",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["requestpatterns.foreach(pattern",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["required",{"_index":398,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["res",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["res.cookie(cookieauthkeys.critical_access_token",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.cookie(cookieauthkeys.critical_refresh_token",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.cookie(cookieauthkeys.pre_auth_token",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["response",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["responseloginmsg",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["responsemedto",{"_index":365,"title":{"classes/ResponseMeDto.html":{}},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"coverage.html":{}}}],["result",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["result.accesstoken",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["result.preauthtoken",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["result.refreshtoken",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["result.userid",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["result.username",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConfigModel.html":{},"modules/ConfigModule.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resusermsg",{"_index":358,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{}}}],["resverifyuserwithtokensmsg",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["return",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["run",{"_index":604,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["samesite",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["satisfies",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":592,"title":{},"body":{"index.html":{}}}],["server",{"_index":593,"title":{},"body":{"index.html":{}}}],["setdescription('critical",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle('critical",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setversion('1.0",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":594,"title":{},"body":{"index.html":{}}}],["signin",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(@body",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(dto",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(dto",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["solana/spl",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["solana/web3.js",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ConfigModel.html":{},"modules/ConfigModule.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{},"index.html":{}}}],["sponsors",{"_index":623,"title":{},"body":{"index.html":{}}}],["start",{"_index":605,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":608,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":610,"title":{},"body":{"index.html":{}}}],["started",{"_index":586,"title":{"index.html":{}},"body":{}}],["starter",{"_index":598,"title":{},"body":{"index.html":{}}}],["statements",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":633,"title":{},"body":{"index.html":{}}}],["strict",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["string",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{},"classes/ConfigModel.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{}}}],["subs",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["subs.ts",{"_index":445,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":624,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":644,"title":{},"body":{"modules.html":{}}}],["swaggerbuilder",{"_index":441,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup('docs",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":367,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["telegraf",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["telegram",{"_index":402,"title":{},"body":{"classes/UserRegistrationDto.html":{}}}],["template",{"_index":343,"title":{},"body":{"classes/GetMeDto.html":{}}}],["test",{"_index":613,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":616,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":615,"title":{},"body":{"index.html":{}}}],["tests",{"_index":612,"title":{},"body":{"index.html":{}}}],["tgid",{"_index":332,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{}}}],["thanks",{"_index":622,"title":{},"body":{"index.html":{}}}],["this.authservice.login(dto",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.me(user.id",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.repeatauthcode(user.id",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(dto",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.verifycode(user.id",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.client.close",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.client.connect",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.client.emit(authmsgpattern.repeat_verify_code",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.client.send",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.client.send(authmsgpattern.user_get_me",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.client.send(authmsgpattern.user_login",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.client.subscribetoresponseof(pattern",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["timestamp",{"_index":366,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{}}}],["todtosync",{"_index":363,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{}}}],["todtosync(responsemedto",{"_index":368,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["tokensjwtenvsmodel",{"_index":254,"title":{},"body":{"classes/ConfigModel.html":{}}}],["ton/crypto",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["ton/ton",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["touch",{"_index":634,"title":{},"body":{"index.html":{}}}],["transform",{"_index":306,"title":{},"body":{"classes/ConfigModel.html":{}}}],["transform(arraytransformer",{"_index":317,"title":{},"body":{"classes/ConfigModel.html":{}}}],["transform(arraytransformer)@isarray",{"_index":286,"title":{},"body":{"classes/ConfigModel.html":{}}}],["transform(numtransformer",{"_index":314,"title":{},"body":{"classes/ConfigModel.html":{}}}],["transform(numtransformer)@isnumber",{"_index":282,"title":{},"body":{"classes/ConfigModel.html":{}}}],["transform(p",{"_index":315,"title":{},"body":{"classes/ConfigModel.html":{}}}],["transformer",{"_index":307,"title":{},"body":{"classes/ConfigModel.html":{},"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"dependencies.html":{}}}],["transport",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["transport.kafka",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{}}}],["tronweb",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":640,"title":{},"body":{"index.html":{}}}],["type",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigModel.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":655,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["types",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{}}}],["typescript",{"_index":597,"title":{},"body":{"index.html":{}}}],["unit",{"_index":611,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["unlicensed",{"_index":654,"title":{},"body":{"properties.html":{}}}],["up",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["updatedat",{"_index":333,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{}}}],["useclass",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{}}}],["useinterceptors",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["user.dto",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.dto.ts",{"_index":370,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:13",{"_index":379,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:19",{"_index":377,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:8",{"_index":375,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["useragent",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["userid",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["userlastname",{"_index":334,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{}}}],["username",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{}}}],["userregistrationdto",{"_index":87,"title":{"classes/UserRegistrationDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserRegistrationDto.html":{},"coverage.html":{}}}],["usersurname",{"_index":335,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{}}}],["utils",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["uuid",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["validatenested",{"_index":361,"title":{},"body":{"classes/GetMeDto.html":{},"classes/ResponseMeDto.html":{}}}],["validator",{"_index":313,"title":{},"body":{"classes/ConfigModel.html":{},"classes/GetMeDto.html":{},"classes/LoginUserDto.html":{},"classes/ResponseMeDto.html":{},"classes/UserRegistrationDto.html":{},"classes/VerifyAuthCodeDto.html":{},"dependencies.html":{}}}],["value",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":658,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifyauthcodedto",{"_index":91,"title":{"classes/VerifyAuthCodeDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/VerifyAuthCodeDto.html":{},"coverage.html":{}}}],["verifyauthcodemsg",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"classes/VerifyAuthCodeDto.html":{}}}],["verifycode",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["verifycode(user",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifycode(userid",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":652,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":606,"title":{},"body":{"index.html":{}}}],["web3",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["website",{"_index":638,"title":{},"body":{"index.html":{}}}],["willsoto/nestjs",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["winston",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["you'd",{"_index":627,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ConfigModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { APP_INTERCEPTOR, APP_PIPE } from '@nestjs/core'\nimport { PrometheusModule } from '@willsoto/nestjs-prometheus'\n\nimport { CacheDatabaseModule } from '@libs/cache'\nimport { CustomValidationPipe, HttpInterceptor } from '@libs/core'\nimport { LoggingInterceptor, LokiLogger } from '@lib/loki'\nimport { CoreAuthModule } from '@lib/core-auth'\n\nimport { ConfigModule } from './config/config.module'\n\nimport { AuthModule } from './modules/auth/auth.module'\n@Module({\n  imports: [\n    CacheDatabaseModule,\n    ConfigModule,\n    AuthModule,\n    PrometheusModule.register(),\n    CoreAuthModule,\n  ],\n  providers: [\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: HttpInterceptor,\n    },\n    {\n      provide: APP_PIPE,\n      useClass: CustomValidationPipe,\n    },\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: LoggingInterceptor,\n    },\n    LokiLogger,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/auth/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                me\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                repeatAuthCode\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                signIn\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                signUp\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                verifyCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me(user: AppUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/me')@CommonAuth()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/auth/auth.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            AppUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        repeatAuthCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    repeatAuthCode(user: AppUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/verify/auth/code-repeat')@PreAuth()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/auth/auth.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            AppUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(dto: LoginUserDto, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/sign-in')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/auth/auth.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            LoginUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(dto: UserRegistrationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/sign-up')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/auth/auth.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UserRegistrationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        verifyCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyCode(user: AppUser, response: Response, dto: VerifyAuthCodeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/verify/auth/code')@PreAuth()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/auth/auth.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            AppUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            VerifyAuthCodeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, UseInterceptors, Get, Res, Patch } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\nimport { NotTg, makeResponse, CommonAuth, User, PreAuth, PreAuthUser } from '@libs/core'\nimport { identity } from 'ramda'\nimport { AppUser } from '@libs/core/types/user'\nimport { Response } from 'express'\n\nimport { AuthService } from './auth.service'\n\nimport { UserRegistrationDto } from './dto/registration.dto'\nimport { LoginUserDto } from './dto/login-user.dto'\nimport { VerifyAuthCodeDto } from './dto/verify-auth-code.dto'\nimport { getUserMe } from './dto/get-me.dto'\n\n@ApiTags('Auth')\n@Controller({ path: 'auth' })\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('/sign-up')\n  public async signUp(@Body() dto: UserRegistrationDto) {\n    const data = await this.authService.signUp(dto)\n    return makeResponse(data, identity)\n  }\n\n  @Post('/sign-in')\n  public async signIn(@Body() dto: LoginUserDto, @Res({ passthrough: true }) response: Response) {\n    const data = await this.authService.login(dto, response)\n    return makeResponse(data, identity)\n  }\n\n  @Get('/me')\n  @CommonAuth()\n  public async me(@User() user: AppUser) {\n    const data = await this.authService.me(user.id)\n    return makeResponse(data, getUserMe)\n  }\n\n  @Post('/verify/auth/code')\n  @PreAuth()\n  public async verifyCode(\n    @PreAuthUser() user: AppUser,\n    @Res({ passthrough: true }) response: Response,\n    @Body() dto: VerifyAuthCodeDto,\n  ) {\n    const data = await this.authService.verifyCode(user.id, dto, response)\n    return makeResponse(data, identity)\n  }\n\n  @Patch('/verify/auth/code-repeat')\n  @PreAuth()\n  public async repeatAuthCode(@PreAuthUser() user: AppUser) {\n    const data = await this.authService.repeatAuthCode(user.id)\n    return makeResponse(data, identity)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { Transport } from '@nestjs/microservices'\n\nimport { ConfigService, ConfigModule } from '@libs/config'\nimport { KafkaClientModule } from '@lib/micro-clients'\nimport { Partitioners } from 'kafkajs'\nimport { AUTH_CLIENT_ID, AUTH_CONSUMER, AUTH_SERVICE_NAME } from '@lib/kafka-types'\n\nimport { AuthService } from './auth.service'\nimport { AuthController } from './auth.controller'\nimport { ConfigModel } from '../../config/config.model'\nimport { CoreAuthModule } from '@lib/core-auth'\n\n@Module({\n  imports: [\n    ConfigModule,\n    KafkaClientModule.registerAsync([\n      {\n        clients: [\n          {\n            inject: [ConfigService],\n            useFactory: ({ env }: ConfigService) => {\n              return {\n                transport: Transport.KAFKA,\n                name: AUTH_SERVICE_NAME,\n                options: {\n                  client: {\n                    clientId: AUTH_CLIENT_ID,\n                    brokers: env.KAFKA_BROKERS_ARRAY as string[],\n                  },\n                  consumer: {\n                    groupId: AUTH_CONSUMER,\n                  },\n                  producer: {\n                    createPartitioner: Partitioners.LegacyPartitioner,\n                  },\n                },\n              }\n            },\n            name: AUTH_SERVICE_NAME,\n          },\n        ],\n      },\n    ]),\n    CoreAuthModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                            \n                                    Public\n                                    Async\n                                me\n                            \n                            \n                                    Public\n                                    Async\n                                onApplicationShutdown\n                            \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Public\n                                    Async\n                                repeatAuthCode\n                            \n                            \n                                    Public\n                                    Async\n                                signUp\n                            \n                            \n                                    Public\n                                    Async\n                                verifyCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientKafka)\n                    \n                \n                        \n                            \n                                Defined in apps/api-gateway/src/modules/auth/auth.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientKafka\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(dto: LoginUserDto, res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/auth/auth.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            LoginUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me(userId: UUID)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/auth/auth.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        UUID\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onApplicationShutdown\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationShutdown()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/auth/auth.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/auth/auth.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        repeatAuthCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    repeatAuthCode(userId: UUID)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/auth/auth.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        UUID\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(dto: UserRegistrationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/auth/auth.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UserRegistrationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        verifyCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyCode(userId: UUID, dto: VerifyAuthCodeDto, res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/modules/auth/auth.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        UUID\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            VerifyAuthCodeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, OnApplicationShutdown, OnModuleInit } from '@nestjs/common'\nimport { ClientKafka } from '@nestjs/microservices'\nimport { lastValueFrom } from 'rxjs'\nimport { UUID } from '@libs/core'\nimport { ResponseLoginMsg } from '@lib/kafka-types'\nimport { Response } from 'express'\nimport {\n  ACCESS_COOKIE_TOKEN_LIFE,\n  CookieAuthKeys,\n  REFRESH_COOKIE_TOKEN_LIFE,\n} from '@libs/constants'\n\nimport { UserRegistrationDto } from './dto/registration.dto'\nimport {\n  AuthServiceMsgBrokerSubsArr,\n  AuthMsgPattern,\n  AUTH_SERVICE_NAME,\n  GetMeMsg,\n  ResVerifyUserWithTokensMSg,\n  VerifyAuthCodeMsg,\n  RepeatVerifyCodeMsg,\n} from './broker-subs'\nimport { LoginUserDto } from './dto/login-user.dto'\nimport { VerifyAuthCodeDto } from './dto/verify-auth-code.dto'\n\n@Injectable()\nexport class AuthService implements OnModuleInit, OnApplicationShutdown {\n  constructor(@Inject(AUTH_SERVICE_NAME) private client: ClientKafka) {}\n\n  public async onModuleInit() {\n    const requestPatterns = AuthServiceMsgBrokerSubsArr\n    requestPatterns.forEach(pattern => {\n      this.client.subscribeToResponseOf(pattern)\n    })\n    await this.client.connect()\n  }\n\n  public async onApplicationShutdown() {\n    await this.client.close()\n  }\n\n  public async signUp(dto: UserRegistrationDto) {\n    const result = await lastValueFrom(this.client.send(AuthMsgPattern.USER_REGISTRATION, dto))\n\n    return result\n  }\n\n  public async login(\n    dto: LoginUserDto,\n    res: Response,\n  ): Promise> {\n    const result: ResponseLoginMsg = await lastValueFrom(\n      this.client.send(AuthMsgPattern.USER_LOGIN, dto),\n    )\n\n    res.cookie(CookieAuthKeys.PRE_AUTH_TOKEN, result.preAuthToken, {\n      httpOnly: true,\n      sameSite: 'strict',\n      expires: new Date(Date.now() + ACCESS_COOKIE_TOKEN_LIFE),\n    })\n\n    return { userName: result.userName }\n  }\n\n  public async me(userId: UUID) {\n    const user = await lastValueFrom(\n      this.client.send(AuthMsgPattern.USER_GET_ME, { userId } satisfies GetMeMsg),\n    )\n\n    return user\n  }\n\n  public async verifyCode(userId: UUID, dto: VerifyAuthCodeDto, res: Response) {\n    const result = await lastValueFrom(\n      this.client.send(\n        AuthMsgPattern.USER_VERIFY_AUTH_CODE,\n        { userId, authCode: dto.authCode },\n      ),\n    )\n\n    res.cookie(CookieAuthKeys.CRITICAL_ACCESS_TOKEN, result.accessToken, {\n      httpOnly: true,\n      expires: new Date(Date.now() + ACCESS_COOKIE_TOKEN_LIFE),\n    })\n\n    res.cookie(CookieAuthKeys.CRITICAL_REFRESH_TOKEN, result.refreshToken, {\n      httpOnly: true,\n      expires: new Date(Date.now() + REFRESH_COOKIE_TOKEN_LIFE),\n    })\n\n    return result.userId\n  }\n\n  public async repeatAuthCode(userId: UUID) {\n    this.client.emit(AuthMsgPattern.REPEAT_VERIFY_CODE, { userId })\n\n    return userId\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigModel.html":{"url":"classes/ConfigModel.html","title":"class - ConfigModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/config/config.model.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        TokensJwtEnvsModel\n                        CoreAuthEnvsModel\n                        LokiEnvsModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ACCESS_EXPIRATION_TIME\n                            \n                            \n                                    \n                                ACCESS_SECRET_KEY\n                            \n                            \n                                    \n                                ACCESS_TOKEN_ENCRYPT_KEY\n                            \n                            \n                                    \n                                AUTH_REDIS_HOST\n                            \n                            \n                                    \n                                    \n                                AUTH_REDIS_PORT\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                CLIENT_URL\n                            \n                            \n                                    \n                                    \n                                KAFKA_BROKERS_ARRAY\n                            \n                            \n                                    \n                                LOKI_ENDPOINT\n                            \n                            \n                                    \n                                LOKI_JOB_NAME\n                            \n                            \n                                    \n                                LOKI_URL\n                            \n                            \n                                    \n                                    \n                                PORT\n                            \n                            \n                                    \n                                REDIS_HOST\n                            \n                            \n                                    \n                                REDIS_PASSWORD\n                            \n                            \n                                    \n                                    \n                                REDIS_PORT\n                            \n                            \n                                    \n                                REFRESH_EXPIRATION_TIME\n                            \n                            \n                                    \n                                REFRESH_SECRET_KEY\n                            \n                            \n                                    \n                                REFRESH_TOKEN_ENCRYPT_KEY\n                            \n                            \n                                    \n                                    \n                                REFRESH_TOKENS_CACHE_TTL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ACCESS_EXPIRATION_TIME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/config/config.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ACCESS_SECRET_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/config/config.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ACCESS_TOKEN_ENCRYPT_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/config/config.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        AUTH_REDIS_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/config/config.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AUTH_REDIS_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(numTransformer)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/config/config.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        CLIENT_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/config/config.model.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        KAFKA_BROKERS_ARRAY\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(arrayTransformer)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/config/config.model.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        LOKI_ENDPOINT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/config/config.model.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        LOKI_JOB_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/config/config.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        LOKI_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/config/config.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Transform(p => )\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/config/config.model.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        REDIS_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/config/config.model.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        REDIS_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/config/config.model.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        REDIS_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Transform(p => )\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/config/config.model.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        REFRESH_EXPIRATION_TIME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/config/config.model.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        REFRESH_SECRET_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/config/config.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        REFRESH_TOKEN_ENCRYPT_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/config/config.model.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        REFRESH_TOKENS_CACHE_TTL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(numTransformer)@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/config/config.model.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CoreAuthEnvsModel } from '@lib/core-auth/core/model/core-auth.envs.model'\nimport { LokiEnvsModel } from '@lib/loki/types/env.model'\nimport { TokensJwtEnvsModel } from '@lib/tokens/model/jwt.envs.model'\nimport { arrayTransformer, numTransformer } from '@libs/core'\nimport { Transform } from 'class-transformer'\nimport { IsArray, IsEmail, IsNumber, IsOptional, IsString, IsUrl } from 'class-validator'\n\nexport class ConfigModel implements TokensJwtEnvsModel, CoreAuthEnvsModel, LokiEnvsModel {\n  @IsString()\n  LOKI_URL: string\n\n  @IsString()\n  LOKI_JOB_NAME: string\n\n  @IsString()\n  AUTH_REDIS_HOST: string\n\n  @Transform(numTransformer)\n  @IsNumber()\n  AUTH_REDIS_PORT: number\n\n  @Transform(numTransformer)\n  @IsNumber()\n  REFRESH_TOKENS_CACHE_TTL: number\n\n  @IsString()\n  ACCESS_SECRET_KEY: string\n\n  @IsString()\n  ACCESS_EXPIRATION_TIME: string\n\n  @IsString()\n  REFRESH_SECRET_KEY: string\n\n  @IsString()\n  REFRESH_EXPIRATION_TIME: string\n\n  @IsString()\n  REFRESH_TOKEN_ENCRYPT_KEY: string\n\n  @IsString()\n  ACCESS_TOKEN_ENCRYPT_KEY: string\n\n  @IsString()\n  LOKI_ENDPOINT: string\n\n  @IsNumber()\n  @Transform(p => Number(p.value))\n  PORT: number\n\n  @IsNumber()\n  @Transform(p => Number(p.value))\n  REDIS_PORT: number\n\n  @IsString()\n  REDIS_HOST: string\n\n  @IsString()\n  REDIS_PASSWORD: string\n\n  @IsOptional()\n  @IsString()\n  @IsUrl()\n  CLIENT_URL?: string\n\n  @Transform(arrayTransformer)\n  @IsArray()\n  KAFKA_BROKERS_ARRAY: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule as ConfigModuleLib } from '@libs/config'\n\nimport { ConfigModel } from './config.model'\n\n@Module({\n  imports: [ConfigModuleLib.register(ConfigModel)],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetMeDto.html":{"url":"classes/GetMeDto.html","title":"class - GetMeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetMeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/auth/dto/get-me.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            User\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                deletedAt\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                id\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                isBlocked\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                isVerify\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                tgId\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                userLastName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                userName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                userSurname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/get-me.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsNullable()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/get-me.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/get-me.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     template literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/get-me.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        isBlocked\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/get-me.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        isVerify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/get-me.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsNullable()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/get-me.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        tgId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsNullable()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/get-me.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/get-me.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        userLastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsNullable()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/get-me.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/get-me.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        userSurname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/get-me.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose, Type } from 'class-transformer'\nimport { ResUserMsg } from '@lib/kafka-types'\nimport { IsBoolean, IsEmail, IsNumber, IsString, IsUUID, ValidateNested } from 'class-validator'\nimport { IsNullable, toDtoSync } from '@libs/core'\n\ntype User = Omit\n\nexport class GetMeDto implements User {\n  @Expose()\n  @IsNullable()\n  readonly tgId: number\n\n  @Expose()\n  @IsString()\n  readonly userName: string\n\n  @Expose()\n  @IsString()\n  readonly userSurname: string\n\n  @Expose()\n  @IsNullable()\n  readonly userLastName: string\n\n  @Expose()\n  @IsEmail()\n  readonly email: string\n\n  @Expose()\n  @IsNullable()\n  readonly phoneNumber: string\n\n  @Expose()\n  @IsBoolean()\n  readonly isBlocked: boolean\n\n  @Expose()\n  @IsBoolean()\n  readonly isVerify: boolean\n\n  @Expose()\n  @IsUUID()\n  readonly id: `${string}-${string}-${string}-${string}-${string}`\n\n  @Expose()\n  @IsString()\n  readonly createdAt: Date\n\n  @Expose()\n  @IsString()\n  readonly updatedAt: Date\n\n  @Expose()\n  @IsNullable()\n  readonly deletedAt: Date\n}\n\nexport class ResponseMeDto {\n  @Expose()\n  @IsNumber()\n  readonly timestamp: number\n\n  @Expose()\n  @Type(() => GetMeDto)\n  @ValidateNested()\n  readonly user: GetMeDto\n}\n\nexport const getUserMe = (data: T) => {\n  return toDtoSync(ResponseMeDto, data)\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/auth/dto/login-user.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        LoginMsg\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'critical@gmail.com'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/login-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '12345Lw2324'})@IsString()@MinLength(10)@MaxLength(120)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/login-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+79323454550'})@IsOptional()@IsPhoneNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/login-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsOptional, IsPhoneNumber, IsString, MaxLength, MinLength } from 'class-validator'\nimport { ApiProperty } from '@nestjs/swagger'\nimport { LoginMsg } from '@lib/kafka-types'\n\nexport class LoginUserDto implements LoginMsg {\n  @ApiProperty({ example: 'critical@gmail.com' })\n  @IsEmail()\n  readonly email?: string\n\n  @ApiProperty({ example: '+79323454550' })\n  @IsOptional()\n  @IsPhoneNumber()\n  readonly phoneNumber?: string\n\n  @ApiProperty({ example: '12345Lw2324' })\n  @IsString()\n  @MinLength(10)\n  @MaxLength(120)\n  readonly password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseMeDto.html":{"url":"classes/ResponseMeDto.html","title":"class - ResponseMeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseMeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/auth/dto/get-me.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                timestamp\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/get-me.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GetMeDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/get-me.dto.ts:66\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose, Type } from 'class-transformer'\nimport { ResUserMsg } from '@lib/kafka-types'\nimport { IsBoolean, IsEmail, IsNumber, IsString, IsUUID, ValidateNested } from 'class-validator'\nimport { IsNullable, toDtoSync } from '@libs/core'\n\ntype User = Omit\n\nexport class GetMeDto implements User {\n  @Expose()\n  @IsNullable()\n  readonly tgId: number\n\n  @Expose()\n  @IsString()\n  readonly userName: string\n\n  @Expose()\n  @IsString()\n  readonly userSurname: string\n\n  @Expose()\n  @IsNullable()\n  readonly userLastName: string\n\n  @Expose()\n  @IsEmail()\n  readonly email: string\n\n  @Expose()\n  @IsNullable()\n  readonly phoneNumber: string\n\n  @Expose()\n  @IsBoolean()\n  readonly isBlocked: boolean\n\n  @Expose()\n  @IsBoolean()\n  readonly isVerify: boolean\n\n  @Expose()\n  @IsUUID()\n  readonly id: `${string}-${string}-${string}-${string}-${string}`\n\n  @Expose()\n  @IsString()\n  readonly createdAt: Date\n\n  @Expose()\n  @IsString()\n  readonly updatedAt: Date\n\n  @Expose()\n  @IsNullable()\n  readonly deletedAt: Date\n}\n\nexport class ResponseMeDto {\n  @Expose()\n  @IsNumber()\n  readonly timestamp: number\n\n  @Expose()\n  @Type(() => GetMeDto)\n  @ValidateNested()\n  readonly user: GetMeDto\n}\n\nexport const getUserMe = (data: T) => {\n  return toDtoSync(ResponseMeDto, data)\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRegistrationDto.html":{"url":"classes/UserRegistrationDto.html","title":"class - UserRegistrationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRegistrationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/auth/dto/registration.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        RegistrationMsg\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                tgId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                userLastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                userName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                userSurname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'critical@gmail.com'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/registration.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '12345Lw2324'})@IsString()@MinLength(10)@MaxLength(120)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/registration.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+79323454550', required: false})@IsOptional()@IsPhoneNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/registration.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        tgId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User telegram id(from mini app)', example: '7432435565', required: false})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/registration.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        userLastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Ivanovich', required: false})@IsOptional()@IsString()@MinLength(2)@MaxLength(30)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/registration.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Ivan'})@IsString()@MinLength(2)@MaxLength(30)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/registration.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                        userSurname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Ivanov'})@IsString()@MinLength(2)@MaxLength(30)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/registration.dto.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RegistrationMsg } from '@libs/grpc-types'\nimport { ApiProperty } from '@nestjs/swagger'\nimport {\n  IsEmail,\n  IsNumber,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator'\n\nexport class UserRegistrationDto implements RegistrationMsg {\n  @ApiProperty({ example: 'critical@gmail.com' })\n  @IsEmail()\n  readonly email: string\n\n  @ApiProperty({ example: '+79323454550', required: false })\n  @IsOptional()\n  @IsPhoneNumber()\n  readonly phoneNumber?: string\n\n  @ApiProperty({\n    description: 'User telegram id(from mini app)',\n    example: '7432435565',\n    required: false,\n  })\n  @IsOptional()\n  @IsNumber()\n  readonly tgId?: number\n\n  @ApiProperty({ example: 'Ivan' })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  readonly userName: string\n\n  @ApiProperty({ example: 'Ivanov' })\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  readonly userSurname: string\n\n  @ApiProperty({ example: 'Ivanovich', required: false })\n  @IsOptional()\n  @IsString()\n  @MinLength(2)\n  @MaxLength(30)\n  readonly userLastName?: string\n\n  @ApiProperty({ example: '12345Lw2324' })\n  @IsString()\n  @MinLength(10)\n  @MaxLength(120)\n  readonly password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyAuthCodeDto.html":{"url":"classes/VerifyAuthCodeDto.html","title":"class - VerifyAuthCodeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyAuthCodeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/modules/auth/dto/verify-auth-code.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                authCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        authCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'f85b5fbb5d'})@IsString()@Length(10)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/modules/auth/dto/verify-auth-code.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { VerifyAuthCodeMsg } from '@lib/kafka-types'\nimport { ApiProperty } from '@nestjs/swagger'\nimport { IsString, Length } from 'class-validator'\n\nexport class VerifyAuthCodeDto implements Omit {\n  @ApiProperty({ example: 'f85b5fbb5d' })\n  @IsString()\n  @Length(10)\n  readonly authCode: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api-gateway/src/config/config.model.ts\n            \n            class\n            ConfigModel\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/main.ts\n            \n            variable\n            enableCorsByEnv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/main.ts\n            \n            variable\n            swaggerBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/modules/auth/broker-subs.ts\n            \n            variable\n            AuthServiceMsgBrokerSubsArr\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/auth/dto/get-me.dto.ts\n            \n            class\n            GetMeDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/auth/dto/get-me.dto.ts\n            \n            class\n            ResponseMeDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/modules/auth/dto/get-me.dto.ts\n            \n            variable\n            getUserMe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/modules/auth/dto/get-me.dto.ts\n            \n            type alias\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/auth/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/auth/dto/registration.dto.ts\n            \n            class\n            UserRegistrationDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/modules/auth/dto/verify-auth-code.dto.ts\n            \n            class\n            VerifyAuthCodeDto\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @clickhouse/client : ^1.6.0\n        \n            @grpc/grpc-js : ^1.11.3\n        \n            @grpc/proto-loader : ^0.7.13\n        \n            @nestjs-cls/transactional : ^2.4.2\n        \n            @nestjs-cls/transactional-adapter-typeorm : ^1.2.4\n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/axios : ^3.1.2\n        \n            @nestjs/cache-manager : ^2.2.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/microservices : ^10.4.4\n        \n            @nestjs/mongoose : ^10.1.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/throttler : ^6.2.1\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            @noble/ciphers : ^1.0.0\n        \n            @noble/hashes : ^1.5.0\n        \n            @solana/spl-token : ^0.1.8\n        \n            @solana/web3.js : ^1.95.5\n        \n            @ton/crypto : ^3.3.0\n        \n            @ton/ton : ^15.1.0\n        \n            @willsoto/nestjs-prometheus : ^6.0.1\n        \n            axios : ^1.7.7\n        \n            bcrypt : ^5.1.1\n        \n            bip32 : 5.0.0-rc.0\n        \n            bip39 : ^3.1.0\n        \n            bitcoinjs-lib : 7.0.0-rc.0\n        \n            bs58 : ^6.0.0\n        \n            cache-manager : ^4.0.0\n        \n            cache-manager-redis-yet : ^5.1.5\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            colors : ^1.4.0\n        \n            cookie-parser : ^1.4.6\n        \n            decimal.js : ^10.4.3\n        \n            dotenv : ^16.4.5\n        \n            express : ^4.21.1\n        \n            express-useragent : ^1.0.15\n        \n            kafkajs : ^2.2.4\n        \n            migrate : ^2.1.0\n        \n            mongoose : ^8.8.1\n        \n            nestjs-cls : ^4.4.1\n        \n            nestjs-grpc-exceptions : ^0.2.2\n        \n            nodemailer : ^6.9.15\n        \n            passport-jwt : ^4.0.1\n        \n            pg : ^8.13.0\n        \n            pino-http : ^10.3.0\n        \n            pino-pretty : ^11.3.0\n        \n            prom-client : ^15.1.3\n        \n            ramda : ^0.30.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            telegraf : ^4.16.3\n        \n            tronweb : ^6.0.0\n        \n            ts-proto : ^2.2.1\n        \n            typeorm : ^0.3.20\n        \n            uuid : ^10.0.0\n        \n            web3 : ^4.15.0\n        \n            web3-utils : ^4.3.2\n        \n            winston : ^3.17.0\n        \n            winston-loki : ^6.1.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api-gateway/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ pnpm installRunning the app\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAuthModule -->\n\nConfigModule->AuthModule\n\n\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            User   (apps/.../get-me.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api-gateway/src/modules/auth/dto/get-me.dto.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                        Omit\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthServiceMsgBrokerSubsArr   (apps/.../broker-subs.ts)\n                        \n                        \n                            enableCorsByEnv   (apps/.../main.ts)\n                        \n                        \n                            getUserMe   (apps/.../get-me.dto.ts)\n                        \n                        \n                            swaggerBuilder   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api-gateway/src/modules/auth/broker-subs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthServiceMsgBrokerSubsArr\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(AuthMsgPattern)\n                    \n                \n\n\n        \n    \n\n    apps/api-gateway/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        enableCorsByEnv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication, config: ConfigService) => {\n  if (process.env['NODE_ENV'] === 'development') {\n    app.enableCors({ origin: '*', credentials: true, optionsSuccessStatus: 200 })\n  } else {\n    app.enableCors({\n      origin: config.env.CLIENT_URL ?? '*',\n      credentials: true,\n      optionsSuccessStatus: 200,\n    })\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swaggerBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication) => {\n  const config = new DocumentBuilder()\n    .setTitle('Critical bank')\n    .setDescription('Critical bank system api')\n    .setVersion('1.0')\n    .addCookieAuth('access_token_auth')\n    .build()\n\n  const document = SwaggerModule.createDocument(app, config)\n\n  SwaggerModule.setup('docs', app, document)\n}\n                    \n                \n\n\n        \n    \n\n    apps/api-gateway/src/modules/auth/dto/get-me.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getUserMe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (data: T) => {\n  return toDtoSync(ResponseMeDto, data)\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
