version: '3.1'

services:
  apigateway:
    container_name: critical-bank-apigateway
    build:
      dockerfile: ./docker/apigateway.Dockerfile
      context: ../
    volumes:
      - .:/usr/src/app
    env_file:
      - ../apigateway.env
    ports:
      - '5001:5001'
    depends_on:
      - redis
    links:
      - redis
    restart: on-failure
    networks:
      - critical-bank-net
  redis:
    image: redis
    restart: on-failure
    ports:
      - '6379:6379'
    volumes:
      - redis:/data
    env_file:
      - ../apigateway.env
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_URL: ${REDIS_URL}
    networks:
      - critical-bank-net
    hostname: critical-redis
  clickhouse-server:
    image: yandex/clickhouse-server
    restart: on-failure
    platform: linux/amd64
    ports:
      - '8124:8123'
      - '9000:9000'
    volumes:
      - clickhouse-server:/var/lib/clickhouse/data
      - ./sql-scripts/clickhouse-critical-db.sql:/var/lib/clickhouse/scripts.sql
    env_file:
      - ../apigateway.env
    environment:
      CLICKHOUSE_USER: ${CLICKHOUSE_USERNAME}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      CLICKHOUSE_DATABASE: ${CLICKHOUSE_DATABASE}
      CLICKHOUSE_LOGS_TABLE: 'logs'
    networks:
      - critical-bank-net
    hostname: critical-clickhouse-server
    command: bash -c "ulimit -n 262144 && clickhouse-server"
volumes:
  redis:
    driver: local
  clickhouse-server:
    external: true
networks:
  critical-bank-net:
    external: true
